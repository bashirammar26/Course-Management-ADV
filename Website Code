import React from 'react';
import { useState } from 'react';
import { Book, GraduationCap, LineChart, LucideBook, PenTool, User } from 'lucide-react';

const Navigation = ({ setCurrentPage }) => (
  <nav className="bg-slate-800 text-white p-4">
    <div className="container mx-auto flex justify-between items-center">
      <div className="text-xl font-bold">EduPlatform</div>
      <div className="flex space-x-6">
        <button onClick={() => setCurrentPage('dashboard')} className="flex items-center space-x-2 hover:text-blue-300">
          <User size={20} />
          <span>Dashboard</span>
        </button>
        <button onClick={() => setCurrentPage('courses')} className="flex items-center space-x-2 hover:text-blue-300">
          <Book size={20} />
          <span>Courses</span>
        </button>
        <button onClick={() => setCurrentPage('exams')} className="flex items-center space-x-2 hover:text-blue-300">
          <PenTool size={20} />
          <span>Exams</span>
        </button>
        <button onClick={() => setCurrentPage('progress')} className="flex items-center space-x-2 hover:text-blue-300">
          <LineChart size={20} />
          <span>Progress</span>
        </button>
      </div>
    </div>
  </nav>
);

const Dashboard = () => {
  const recommendations = [
    { id: 1, title: 'Advanced Mathematics', progress: 75 },
    { id: 2, title: 'Physics Fundamentals', progress: 45 },
    { id: 3, title: 'Computer Science Basics', progress: 90 }
  ];

  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold mb-6">Personal Dashboard</h1>
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="bg-white p-6 rounded-lg shadow">
          <h2 className="text-xl font-semibold mb-4">Recent Grades</h2>
          <div className="space-y-4">
            {recommendations.map(course => (
              <div key={course.id} className="flex justify-between items-center">
                <span>{course.title}</span>
                <span className="font-semibold">{course.progress}%</span>
              </div>
            ))}
          </div>
        </div>
        <div className="bg-white p-6 rounded-lg shadow">
          <h2 className="text-xl font-semibold mb-4">Recommended Content</h2>
          <div className="space-y-4">
            <div className="p-4 border rounded hover:bg-gray-50 cursor-pointer">
              <h3 className="font-semibold">Mathematics Tutorial</h3>
              <p className="text-gray-600">Recommended based on recent exam performance</p>
            </div>
            <div className="p-4 border rounded hover:bg-gray-50 cursor-pointer">
              <h3 className="font-semibold">Physics Lab Simulation</h3>
              <p className="text-gray-600">Suggested for improved understanding</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

const Courses = () => {
  const courses = [
    { id: 1, title: 'Mathematics 101', instructor: 'Dr. Smith', progress: 75 },
    { id: 2, title: 'Physics Fundamentals', instructor: 'Prof. Johnson', progress: 45 },
    { id: 3, title: 'Computer Science Basics', instructor: 'Dr. Williams', progress: 90 }
  ];

  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold mb-6">My Courses</h1>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {courses.map(course => (
          <div key={course.id} className="bg-white p-6 rounded-lg shadow">
            <div className="flex items-center mb-4">
              <LucideBook className="w-8 h-8 text-blue-500 mr-3" />
              <h2 className="text-xl font-semibold">{course.title}</h2>
            </div>
            <p className="text-gray-600 mb-4">Instructor: {course.instructor}</p>
            <div className="w-full bg-gray-200 rounded-full h-2.5">
              <div 
                className="bg-blue-600 h-2.5 rounded-full" 
                style={{ width: `${course.progress}%` }}
              ></div>
            </div>
            <p className="text-right mt-2 text-sm text-gray-600">{course.progress}% Complete</p>
          </div>
        ))}
      </div>
    </div>
  );
};

const Exams = () => {
  const [activeExam, setActiveExam] = useState(null);
  const [timeLeft, setTimeLeft] = useState(3600); // 1 hour in seconds

  const exams = [
    { id: 1, title: 'Mathematics Midterm', duration: '1 hour', status: 'Available' },
    { id: 2, title: 'Physics Quiz', duration: '30 minutes', status: 'Upcoming' },
    { id: 3, title: 'Computer Science Final', duration: '2 hours', status: 'Completed' }
  ];

  const ExamQuestion = ({ question }) => (
    <div className="mb-6 p-4 bg-white rounded-lg shadow">
      <h3 className="font-semibold mb-3">{question.text}</h3>
      <div className="space-y-2">
        {question.options.map((option, index) => (
          <div key={index} className="flex items-center">
            <input
              type="radio"
              name={`question-${question.id}`}
              id={`option-${index}`}
              className="mr-2"
            />
            <label htmlFor={`option-${index}`}>{option}</label>
          </div>
        ))}
      </div>
    </div>
  );

  const startExam = (examId) => {
    setActiveExam(examId);
    // Initialize exam timer and questions
  };

  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold mb-6">Exams</h1>
      {!activeExam ? (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {exams.map(exam => (
            <div key={exam.id} className="bg-white p-6 rounded-lg shadow">
              <div className="flex justify-between items-start mb-4">
                <div>
                  <h2 className="text-xl font-semibold">{exam.title}</h2>
                  <p className="text-gray-600">Duration: {exam.duration}</p>
                </div>
                <span className={`px-3 py-1 rounded text-sm ${
                  exam.status === 'Available' ? 'bg-green-100 text-green-800' :
                  exam.status === 'Upcoming' ? 'bg-yellow-100 text-yellow-800' :
                  'bg-gray-100 text-gray-800'
                }`}>
                  {exam.status}
                </span>
              </div>
              {exam.status === 'Available' && (
                <button
                  onClick={() => startExam(exam.id)}
                  className="w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600"
                >
                  Start Exam
                </button>
              )}
            </div>
          ))}
        </div>
      ) : (
        <div className="max-w-3xl mx-auto">
          <div className="bg-white p-6 rounded-lg shadow mb-6">
            <div className="flex justify-between items-center mb-4">
              <h2 className="text-xl font-semibold">Mathematics Midterm</h2>
              <div className="text-lg font-semibold">
                Time Left: {Math.floor(timeLeft / 60)}:{String(timeLeft % 60).padStart(2, '0')}
              </div>
            </div>
            <ExamQuestion
              question={{
                id: 1,
                text: "What is the derivative of x²?",
                options: ["x", "2x", "2", "x²"]
              }}
            />
            <ExamQuestion
              question={{
                id: 2,
                text: "Solve for x: 2x + 5 = 13",
                options: ["x = 4", "x = 8", "x = 3", "x = 6"]
              }}
            />
            <div className="flex justify-between mt-6">
              <button className="bg-gray-500 text-white px-6 py-2 rounded hover:bg-gray-600">
                Previous
              </button>
              <button className="bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600">
                Next
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

const Progress = () => {
  const progressData = [
    { course: 'Mathematics 101', completed: 75, total: 100 },
    { course: 'Physics Fundamentals', completed: 45, total: 100 },
    { course: 'Computer Science Basics', completed: 90, total: 100 }
  ];

  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold mb-6">Course Progress</h1>
      <div className="bg-white p-6 rounded-lg shadow">
        {progressData.map((item, index) => (
          <div key={index} className="mb-6">
            <div className="flex justify-between mb-2">
              <span className="font-semibold">{item.course}</span>
              <span>{(item.completed / item.total * 100).toFixed(1)}%</span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2.5">
              <div
                className="bg-blue-600 h-2.5 rounded-full"
                style={{ width: `${(item.completed / item.total) * 100}%` }}
              ></div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

const App = () => {
  const [currentPage, setCurrentPage] = useState('dashboard');

  const renderPage = () => {
    switch (currentPage) {
      case 'dashboard':
        return <Dashboard />;
      case 'courses':
        return <Courses />;
      case 'exams':
        return <Exams />;
      case 'progress':
        return <Progress />;
      default:
        return <Dashboard />;
    }
  };

  return (
    <div className="min-h-screen bg-gray-100">
      <Navigation setCurrentPage={setCurrentPage} />
      {renderPage()}
    </div>
  );
};

export default App;
